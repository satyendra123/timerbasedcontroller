#lets suppose i have a barrier. i want there should be four button set, up, down, ok button. when i click on the set button it means that we can now start setting the time. up button will increase the 1 second time, down button will decrease the 1 sec time and when i click on the ok button means time is saved.
# lets suppose mai barrier ka controller banana chahta hu jisme ki barrier jab up ho to after 3 seconds down relay will be triggered and boom barrier will be down. but if boom barrier is already down then the down relay will not be triggered
# so mai four button ki jagah par four wire connect kar lunga testing krne ke liye aur touch kar karke dekhunga time increase aur decrease karke ki aisa ho bhi rha hai ya nahi
# i also uses a file to store the settime data in a file and retrieve it from here because when power goes off and comes again it should work as previous set timing. so i have import the os and json for creating the file and store the data in it


from machine import Pin, Timer
import time
import ujson
import uos

# Define pin numbers for buttons and relays
SET_BUTTON_PIN = 2
UP_BUTTON_PIN = 3
DOWN_BUTTON_PIN = 4
OK_BUTTON_PIN = 5
UP_RELAY_PIN = 12
DOWN_RELAY_PIN = 13

# Define initial barrier state and timer duration
barrier_up = False
timer_duration = 0
auto_down_time = 10  # Auto down time in seconds

# Initialize buttons
set_button = Pin(SET_BUTTON_PIN, Pin.IN, Pin.PULL_UP)
up_button = Pin(UP_BUTTON_PIN, Pin.IN, Pin.PULL_UP)
down_button = Pin(DOWN_BUTTON_PIN, Pin.IN, Pin.PULL_UP)
ok_button = Pin(OK_BUTTON_PIN, Pin.IN, Pin.PULL_UP)

# Initialize relays
up_relay = Pin(UP_RELAY_PIN, Pin.OUT)
down_relay = Pin(DOWN_RELAY_PIN, Pin.OUT)

# Set relays to initial state (barrier down)
up_relay.off()
down_relay.on()

# Define file name for storing timer duration
TIMER_FILE = 'timer.json'

# Load previous timer duration from file
try:
    with open(TIMER_FILE, 'r') as f:
        timer_duration = ujson.load(f)
except OSError:
    # File does not exist or unable to open
    pass

# Initialize timer if not loaded from file
if timer_duration <= 0:
    timer_duration = 0

# Timer callback function to close the barrier
def close_barrier(timer):
    global barrier_up
    if barrier_up:
        up_relay.off()
        barrier_up = False

# Timer for auto-down functionality
auto_down_timer = Timer(-1)

# Enter main loop
while True:
    # Check if set button is pressed
    if not set_button.value():
        print("Entering set mode...")
        # Enter set mode
        while ok_button.value():
            # Check if up button is pressed
            if not up_button.value():
                # Increase timer duration by 1 second
                timer_duration += 1000
                print(f"Timer duration: {timer_duration} ms")
                time.sleep(0.2)  # Debounce delay

            # Check if down button is pressed
            if not down_button.value() and timer_duration > 0:
                # Decrease timer duration by 1 second (minimum 0)
                timer_duration -= 1000
                print(f"Timer duration: {timer_duration} ms")
                time.sleep(0.2)  # Debounce delay

            # Display timer duration (e.g., using LEDs or a display)

        # Save timer duration to file when OK button is pressed
        with open(TIMER_FILE, 'w') as f:
            ujson.dump(timer_duration, f)
            print(f"Timer duration saved to file: {duration} ms")
    # Check if ok button is pressed (to start timer)
    if not ok_button.value() and timer_duration > 0:
        # Start timer and raise barrier after timer duration
        barrier_up = True
        up_relay.on()# Raise barrier
        time.sleep(0.1)
        up_relay.off() # Raise barrier
        print("Barrier is up")
        auto_down_timer.init(period=auto_down_time * 1000, mode=Timer.PERIODIC, callback=close_barrier)
        time.sleep_ms(timer_duration)
        if barrier_up:
            up_relay.off()  # Lower barrier
            barrier_up = False
            print("Barrier is down")
    # Check if barrier is up and no timer is set (manual control)
    if barrier_up and timer_duration == 0:
        # Check if down button is pressed
        if not down_button.value():
            # Lower barrier
            up_relay.off()
            barrier_up = False
            print("Barrier is manually down")
    time.sleep(0.05)
